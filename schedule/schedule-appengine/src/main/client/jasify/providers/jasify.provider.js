/**
 * Generated by endpoints-angular-client-generator (version 0.0.1-2)
 * Arguments:
 *   endpoints-angular-client-generator -d ../../target/jasify-v1-rest.discovery.json -s -o src/main/client/jasify/providers
 */
/*global angular*/
(function (angular) {
    'use strict';
    angular.module('jasify.endpoint').provider('Jasify', JasifyProvider);

    function JasifyProvider() {
        var provider = this;
        provider.config = {
            apiRoot: 'https://jasify-schedule.appspot.com/_ah/api/jasify/v1/',
            defaultParameters: {}
        };
        provider.apiRoot = function (v) {
            if (angular.isDefined(v)) {
                provider.config.apiRoot = v;
            }
            return provider.config.apiRoot;
        };
        provider.defaultParameters = function (v) {
            if (angular.isDefined(v)) {
                provider.config.defaultParameters = v;
            }
            return provider.config.defaultParameters;
        };
        provider.apiPath = function (path) {
            return provider.config.apiRoot + path;
        };
        provider.setApiKey = function (key) {
            provider.config.defaultParameters.key = key;
        };
        provider.parameters = function (params) {
            return angular.extend(params, provider.config.defaultParameters);
        };
        provider.$get = ['$http', function ($http) {
            var svc = {
                apiInfo: apiInfo,
                activities: activities(),
                activityPackages: activityPackages(),
                activitySubscriptions: activitySubscriptions(),
                activityTypes: activityTypes(),
                auth: auth(),
                balance: balance(),
                carts: carts(),
                groups: groups(),
                histories: histories(),
                organizations: organizations(),
                payments: payments(),
                unique: unique(),
                userLogins: userLogins(),
                users: users()
            };

            function apiInfo() {
                return $http({
                    method: 'GET',
                    url: provider.apiPath('api-info'),
                    params: provider.parameters({})
                });
            }

            function activities() {
                var _activities = {
                    add: jasify_activities_add,
                    get: jasify_activities_get,
                    listQuery: jasify_activities_listQuery,
                    patch: jasify_activities_patch,
                    query: jasify_activities_query,
                    remove: jasify_activities_remove,
                    update: jasify_activities_update
                };

                function jasify_activities_add(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('activities'),
                        params: provider.parameters({})
                    });
                }

                function jasify_activities_get(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activities/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activities_listQuery(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('activities-list'),
                        params: provider.parameters({})
                    });
                }

                function jasify_activities_patch(request, id) {
                    return $http({
                        method: 'PATCH',
                        data: request,
                        url: provider.apiPath('activities/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activities_query(activityTypeId, fromDate, limit, offset, organizationId, toDate) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activities'),
                        params: provider.parameters({
                            activityTypeId: activityTypeId,
                            fromDate: fromDate,
                            limit: limit,
                            offset: offset,
                            organizationId: organizationId,
                            toDate: toDate
                        })
                    });
                }

                function jasify_activities_remove(id) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('activities/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activities_update(resource, id) {
                    return $http({
                        method: 'PUT',
                        data: resource,
                        url: provider.apiPath('activities/' + id + ''),
                        params: provider.parameters({})
                    });
                }
                return _activities;
            }

            function activityPackages() {
                var _activityPackages = {
                    add: jasify_activityPackages_add,
                    addActivity: jasify_activityPackages_addActivity,
                    get: jasify_activityPackages_get,
                    getActivities: jasify_activityPackages_getActivities,
                    patch: jasify_activityPackages_patch,
                    query: jasify_activityPackages_query,
                    remove: jasify_activityPackages_remove,
                    removeActivity: jasify_activityPackages_removeActivity,
                    update: jasify_activityPackages_update
                };

                function jasify_activityPackages_add(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('activity-packages'),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityPackages_addActivity(activityId, activityPackageId) {
                    return $http({
                        method: 'POST',
                        url: provider.apiPath('activity-packages-activity/' + activityPackageId + '/' + activityId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityPackages_get(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activity-packages/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityPackages_getActivities(activityPackageId) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activity-packages-activity/' + activityPackageId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityPackages_patch(request, id) {
                    return $http({
                        method: 'PATCH',
                        data: request,
                        url: provider.apiPath('activity-packages/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityPackages_query(organizationId) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activity-packages'),
                        params: provider.parameters({
                            organizationId: organizationId
                        })
                    });
                }

                function jasify_activityPackages_remove(id) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('activity-packages/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityPackages_removeActivity(activityId, activityPackageId) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('activity-packages-activity/' + activityPackageId + '/' + activityId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityPackages_update(resource, id) {
                    return $http({
                        method: 'PUT',
                        data: resource,
                        url: provider.apiPath('activity-packages/' + id + ''),
                        params: provider.parameters({})
                    });
                }
                return _activityPackages;
            }

            function activitySubscriptions() {
                var _activitySubscriptions = {
                    add: jasify_activitySubscriptions_add,
                    cancel: jasify_activitySubscriptions_cancel,
                    getForUser: jasify_activitySubscriptions_getForUser,
                    query: jasify_activitySubscriptions_query,
                    subscribers: jasify_activitySubscriptions_subscribers
                };

                function jasify_activitySubscriptions_add(activityId, userId) {
                    return $http({
                        method: 'POST',
                        url: provider.apiPath('activity-subscriptions'),
                        params: provider.parameters({
                            activityId: activityId,
                            userId: userId
                        })
                    });
                }

                function jasify_activitySubscriptions_cancel(subscriptionId) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('activities/{id}/subscribers'),
                        params: provider.parameters({
                            subscriptionId: subscriptionId
                        })
                    });
                }

                function jasify_activitySubscriptions_getForUser(fromDate, toDate, userId) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('user-subscriptions'),
                        params: provider.parameters({
                            fromDate: fromDate,
                            toDate: toDate,
                            userId: userId
                        })
                    });
                }

                function jasify_activitySubscriptions_query(activityId, userId) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activity-subscriptions'),
                        params: provider.parameters({
                            activityId: activityId,
                            userId: userId
                        })
                    });
                }

                function jasify_activitySubscriptions_subscribers(activityId) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activities/{id}/subscribers'),
                        params: provider.parameters({
                            activityId: activityId
                        })
                    });
                }
                return _activitySubscriptions;
            }

            function activityTypes() {
                var _activityTypes = {
                    add: jasify_activityTypes_add,
                    get: jasify_activityTypes_get,
                    patch: jasify_activityTypes_patch,
                    query: jasify_activityTypes_query,
                    remove: jasify_activityTypes_remove,
                    update: jasify_activityTypes_update
                };

                function jasify_activityTypes_add(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('activity-types'),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityTypes_get(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activity-types/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityTypes_patch(request, id) {
                    return $http({
                        method: 'PATCH',
                        data: request,
                        url: provider.apiPath('activity-types/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityTypes_query(organizationId) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('activity-types'),
                        params: provider.parameters({
                            organizationId: organizationId
                        })
                    });
                }

                function jasify_activityTypes_remove(id) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('activity-types/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_activityTypes_update(resource, id) {
                    return $http({
                        method: 'PUT',
                        data: resource,
                        url: provider.apiPath('activity-types/' + id + ''),
                        params: provider.parameters({})
                    });
                }
                return _activityTypes;
            }

            function auth() {
                var _auth = {
                    changePassword: jasify_auth_changePassword,
                    forgotPassword: jasify_auth_forgotPassword,
                    login: jasify_auth_login,
                    logout: jasify_auth_logout,
                    providerAuthenticate: jasify_auth_providerAuthenticate,
                    providerAuthorize: jasify_auth_providerAuthorize,
                    recoverPassword: jasify_auth_recoverPassword,
                    restore: jasify_auth_restore
                };

                function jasify_auth_changePassword(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('auth/change-password'),
                        params: provider.parameters({})
                    });
                }

                function jasify_auth_forgotPassword(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('auth/forgot-password'),
                        params: provider.parameters({})
                    });
                }

                function jasify_auth_login(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('auth/login'),
                        params: provider.parameters({})
                    });
                }

                function jasify_auth_logout() {
                    return $http({
                        method: 'POST',
                        url: provider.apiPath('auth/logout'),
                        params: provider.parameters({})
                    });
                }

                function jasify_auth_providerAuthenticate(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('auth/provider-authenticate'),
                        params: provider.parameters({})
                    });
                }

                function jasify_auth_providerAuthorize(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('auth/provider-authorize'),
                        params: provider.parameters({})
                    });
                }

                function jasify_auth_recoverPassword(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('auth/recover-password'),
                        params: provider.parameters({})
                    });
                }

                function jasify_auth_restore() {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('auth/restore'),
                        params: provider.parameters({})
                    });
                }
                return _auth;
            }

            function balance() {
                var _balance = {
                    cancelPayment: jasify_balance_cancelPayment,
                    createCheckoutPayment: jasify_balance_createCheckoutPayment,
                    createPayment: jasify_balance_createPayment,
                    executePayment: jasify_balance_executePayment,
                    getAccount: jasify_balance_getAccount,
                    getAccounts: jasify_balance_getAccounts,
                    getTransactions: jasify_balance_getTransactions
                };

                function jasify_balance_cancelPayment(id) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('balance/cancel-payment/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_balance_createCheckoutPayment(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('balance/create-checkout-payment'),
                        params: provider.parameters({})
                    });
                }

                function jasify_balance_createPayment(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('balance/create-payment'),
                        params: provider.parameters({})
                    });
                }

                function jasify_balance_executePayment(id, payerId) {
                    return $http({
                        method: 'PUT',
                        url: provider.apiPath('balance/execute-payment/' + id + ''),
                        params: provider.parameters({
                            payerId: payerId
                        })
                    });
                }

                function jasify_balance_getAccount() {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('balance/account'),
                        params: provider.parameters({})
                    });
                }

                function jasify_balance_getAccounts() {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('balance/accounts'),
                        params: provider.parameters({})
                    });
                }

                function jasify_balance_getTransactions(accountId, limit, offset) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('balance/transactions/' + accountId + ''),
                        params: provider.parameters({
                            limit: limit,
                            offset: offset
                        })
                    });
                }
                return _balance;
            }

            function carts() {
                var _carts = {
                    addUserActivity: jasify_carts_addUserActivity,
                    addUserActivityPackage: jasify_carts_addUserActivityPackage,
                    anonymousCartToUserCart: jasify_carts_anonymousCartToUserCart,
                    clearUserCart: jasify_carts_clearUserCart,
                    createAnonymousCart: jasify_carts_createAnonymousCart,
                    get: jasify_carts_get,
                    getItem: jasify_carts_getItem,
                    getUserCart: jasify_carts_getUserCart,
                    removeItem: jasify_carts_removeItem
                };

                function jasify_carts_addUserActivity(activityId) {
                    return $http({
                        method: 'POST',
                        url: provider.apiPath('carts/user/activity/' + activityId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_carts_addUserActivityPackage(resource, activityPackageId) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('carts/user/activity-package/' + activityPackageId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_carts_anonymousCartToUserCart(id) {
                    return $http({
                        method: 'PUT',
                        url: provider.apiPath('carts/anonymous/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_carts_clearUserCart() {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('carts/user'),
                        params: provider.parameters({})
                    });
                }

                function jasify_carts_createAnonymousCart(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('carts/anonymous'),
                        params: provider.parameters({})
                    });
                }

                function jasify_carts_get(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('carts/anonymous/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_carts_getItem(cartId, ordinal) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('carts/' + cartId + '/' + ordinal + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_carts_getUserCart() {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('carts/user'),
                        params: provider.parameters({})
                    });
                }

                function jasify_carts_removeItem(cartId, ordinal) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('carts/' + cartId + '/' + ordinal + ''),
                        params: provider.parameters({})
                    });
                }
                return _carts;
            }

            function groups() {
                var _groups = {
                    add: jasify_groups_add,
                    addUser: jasify_groups_addUser,
                    get: jasify_groups_get,
                    patch: jasify_groups_patch,
                    query: jasify_groups_query,
                    remove: jasify_groups_remove,
                    removeUser: jasify_groups_removeUser,
                    update: jasify_groups_update,
                    users: jasify_groups_users
                };

                function jasify_groups_add(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('groups'),
                        params: provider.parameters({})
                    });
                }

                function jasify_groups_addUser(groupId, userId) {
                    return $http({
                        method: 'POST',
                        url: provider.apiPath('groups/' + groupId + '/users/' + userId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_groups_get(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('groups/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_groups_patch(request, id) {
                    return $http({
                        method: 'PATCH',
                        data: request,
                        url: provider.apiPath('groups/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_groups_query() {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('groups'),
                        params: provider.parameters({})
                    });
                }

                function jasify_groups_remove(id) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('groups/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_groups_removeUser(groupId, userId) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('groups/' + groupId + '/users/' + userId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_groups_update(resource, id) {
                    return $http({
                        method: 'PUT',
                        data: resource,
                        url: provider.apiPath('groups/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_groups_users(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('group-users/' + id + ''),
                        params: provider.parameters({})
                    });
                }
                return _groups;
            }

            function histories() {
                var _histories = {
                    query: jasify_histories_query
                };

                function jasify_histories_query(fromDate, toDate) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('histories'),
                        params: provider.parameters({
                            fromDate: fromDate,
                            toDate: toDate
                        })
                    });
                }
                return _histories;
            }

            function organizations() {
                var _organizations = {
                    add: jasify_organizations_add,
                    addGroup: jasify_organizations_addGroup,
                    addUser: jasify_organizations_addUser,
                    get: jasify_organizations_get,
                    groups: jasify_organizations_groups,
                    patch: jasify_organizations_patch,
                    query: jasify_organizations_query,
                    queryPublic: jasify_organizations_queryPublic,
                    remove: jasify_organizations_remove,
                    removeGroup: jasify_organizations_removeGroup,
                    removeUser: jasify_organizations_removeUser,
                    update: jasify_organizations_update,
                    users: jasify_organizations_users
                };

                function jasify_organizations_add(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('organizations'),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_addGroup(groupId, organizationId) {
                    return $http({
                        method: 'POST',
                        url: provider.apiPath('organizations/' + organizationId + '/groups/' + groupId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_addUser(organizationId, userId) {
                    return $http({
                        method: 'POST',
                        url: provider.apiPath('organizations/' + organizationId + '/users/' + userId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_get(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('organizations/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_groups(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('organization-groups/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_patch(request, id) {
                    return $http({
                        method: 'PATCH',
                        data: request,
                        url: provider.apiPath('organizations/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_query() {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('organizations'),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_queryPublic() {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('organizations-public'),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_remove(id) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('organizations/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_removeGroup(groupId, organizationId) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('organizations/' + organizationId + '/groups/' + groupId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_removeUser(organizationId, userId) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('organizations/' + organizationId + '/users/' + userId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_update(resource, id) {
                    return $http({
                        method: 'PUT',
                        data: resource,
                        url: provider.apiPath('organizations/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_organizations_users(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('organization-users/' + id + ''),
                        params: provider.parameters({})
                    });
                }
                return _organizations;
            }

            function payments() {
                var _payments = {
                    cancelPayment: jasify_payments_cancelPayment,
                    executePayment: jasify_payments_executePayment,
                    get: jasify_payments_get,
                    getPaymentInvoice: jasify_payments_getPaymentInvoice,
                    query: jasify_payments_query,
                    queryByReferenceCode: jasify_payments_queryByReferenceCode
                };

                function jasify_payments_cancelPayment(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('payments-cancel/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_payments_executePayment(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('payments-execute/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_payments_get(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('payments/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_payments_getPaymentInvoice(paymentId) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('payment-invoices/' + paymentId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_payments_query(fromDate, state, toDate) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('payments'),
                        params: provider.parameters({
                            fromDate: fromDate,
                            state: state,
                            toDate: toDate
                        })
                    });
                }

                function jasify_payments_queryByReferenceCode(referenceCode) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('payments-reference-code/' + referenceCode + ''),
                        params: provider.parameters({})
                    });
                }
                return _payments;
            }

            function unique() {
                var _unique = {
                    email: jasify_unique_email,
                    username: jasify_unique_username
                };

                function jasify_unique_email(email) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('unique/email/' + email + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_unique_username(username) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('unique/username/' + username + ''),
                        params: provider.parameters({})
                    });
                }
                return _unique;
            }

            function userLogins() {
                var _userLogins = {
                    list: jasify_userLogins_list,
                    remove: jasify_userLogins_remove
                };

                function jasify_userLogins_list(userId) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('user-logins/' + userId + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_userLogins_remove(loginId) {
                    return $http({
                        method: 'DELETE',
                        url: provider.apiPath('user-logins/' + loginId + ''),
                        params: provider.parameters({})
                    });
                }
                return _userLogins;
            }

            function users() {
                var _users = {
                    add: jasify_users_add,
                    get: jasify_users_get,
                    patch: jasify_users_patch,
                    query: jasify_users_query,
                    update: jasify_users_update
                };

                function jasify_users_add(resource) {
                    return $http({
                        method: 'POST',
                        data: resource,
                        url: provider.apiPath('users'),
                        params: provider.parameters({})
                    });
                }

                function jasify_users_get(id) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('users/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_users_patch(request, id) {
                    return $http({
                        method: 'PATCH',
                        data: request,
                        url: provider.apiPath('users/' + id + ''),
                        params: provider.parameters({})
                    });
                }

                function jasify_users_query(field, limit, offset, order, orderBy, query) {
                    return $http({
                        method: 'GET',
                        url: provider.apiPath('users'),
                        params: provider.parameters({
                            field: field,
                            limit: limit,
                            offset: offset,
                            order: order,
                            orderBy: orderBy,
                            query: query
                        })
                    });
                }

                function jasify_users_update(resource, id) {
                    return $http({
                        method: 'PUT',
                        data: resource,
                        url: provider.apiPath('users/' + id + ''),
                        params: provider.parameters({})
                    });
                }
                return _users;
            }
            return svc;
        }];
    }
}(angular));
